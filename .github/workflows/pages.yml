# Workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main", "master"]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'  # Not needed with a .ruby-version file
          bundler-cache: true  # runs 'bundle install' and caches installed gems automatically
          
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
        
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
          
      - name: Check site size
        # Ensure site doesn't exceed GitHub Pages limits
        run: |
          SITE_SIZE=$(du -sb _site | cut -f1)
          MAX_SIZE=$((950 * 1024 * 1024))  # 950MB warning threshold
          if [ $SITE_SIZE -gt $MAX_SIZE ]; then
            echo "WARNING: Site size exceeds 950MB (approaching 1GB limit)"
            echo "Current size: $(du -sh _site | cut -f1)"
            # Find large files
            echo "Largest files:"
            find _site -type f -size +5M -exec ls -lh {} \; | sort -k5 -rh | head -10
          else
            echo "Site size OK: $(du -sh _site | cut -f1)"
          fi
          
      - name: HTML validation (optional)
        # Validate HTML but don't fail the build on errors
        run: bundle exec htmlproofer ./_site --disable-external --allow-hash-href || true
        continue-on-error: true
        
      - name: Upload artifact
        # Upload entire repository for GitHub Pages deployment
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 